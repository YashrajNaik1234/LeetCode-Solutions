class Solution {
public:
    int solve(vector<int>& a, long long x, long long v){
        int left(0),right(a.size() - 1);
        while(left <= right){
            int mid = left + (right - left ) / 2;
            if(x >= 0 and a[mid] * x <= v or
                x < 0 and a[mid] * x > v) left = mid + 1;
            else right = mid - 1;
        }

        if(x >= 0) return left;
        return a.size() - left;
    }
    long long kthSmallestProduct(vector<int>& nums1, vector<int>& nums2, long long k) {
        long long left(-1e10),right(1e10);
        while(left <= right){
            long long mid = left + (right - left) / 2;
            long long count = 0;
            for(int i(0);i < nums1.size();i++){
                count += solve(nums2, nums1[i], mid);
            }

            if(count < k) left = mid + 1;
            else right = mid - 1;
        }

        return left;
    }
};
