class Solution {
public:
    int solve(vector<int>& bloomDay, int mid, int k) {
        int cnt(0), j(0);
        for (int i(0); i < bloomDay.size(); i++) {
            if (bloomDay[i] <= mid) j++;
            else j = 0;

            if (j == k) {
                j = 0; cnt++;
            }
        }
        return cnt;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        int l(*min_element(bloomDay.begin(),bloomDay.end()));
        int h(*max_element(bloomDay.begin(),bloomDay.end()));
        int ans(-1);

        while (l <= h) {
            int mid((l + h) / 2);
            int count = solve(bloomDay, mid, k);
            if (count >= m) {
                ans = mid; h = mid - 1;
            }
            else l = mid + 1;
        }
        return ans;
    }
};
