class Solution {
public:
    int cal(vector<int>& v, int mid) {
        int split(1);
        int sum(0);

        for (int i(0); i < v.size(); i++) {
            if (v[i] + sum > mid) {
                split++; sum = v[i];
            }
            else sum += v[i];
        }

        return split;
    }
    int splitArray(vector<int>& nums, int k) {
        int left(*max_element(nums.begin(), nums.end()));
        int right(accumulate(nums.begin(), nums.end(), 0));

        while (left <= right) {
            int mid = left + (right - left + 1) / 2;

            if (cal(nums, mid) > k) left = mid + 1;
            else right = mid - 1;
        }

        return left;
    }
};
